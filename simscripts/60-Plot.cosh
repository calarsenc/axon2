
// TableWithNewKeyColumns returns a copy of the Table with new columns
// having given values, inserted at the start, used as legend keys etc.
// args are column name, value pairs.
func TableWithNewKeyColumns(dt *table.Table, args ...string) *table.Table {
	n := len(args)
	if n % 2 != 0 {
		fmt.Println("TableWithNewColumns requires even number of args as colnm, value pairs")
		return dt
	}
	c := dt.Clone()
	nc := n / 2
	for j := 0; j < nc; j++ {
		colNm := args[2 * j]
		val := args[2 * j+1]
		col := tensor.NewString([]int{c.Rows})
		c.InsertColumn(col, colNm, 0)
		for i := range col.Values {
			col.Values[i] = val
		}
	}
	return c
}

func PlotResults() {
	tv := ResultsTableView
	jis := tv.SelectedIndexesList(false)
	if len(jis) == 0 {
		fmt.Println("No Results rows selected")
		return
	}
	var AggTable *table.Table
	for _, i := range jis {
		res := Results[i]
		jid := res.JobID
		label := res.Label
		dt := TableWithNewKeyColumns(res.Table, "JobID", jid, "JobLabel", label)
		if AggTable == nil {
			AggTable = dt
		} else {
			AggTable.AppendRows(dt)
		}
	}
	pl := br.NewTabPlot("Plot")
	if pl.Params.Title == "" {
		pl.Params = Config.Plot
	}
	pl.SetTable(AggTable)
	br.Update()
}

PlotResults()

