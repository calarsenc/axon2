// Loads data for specific jobs results

func AvgDataFiles(jobs []string) {
	for i, jid := range jobs {
		fmt.Println(jid)
		jpath := JobPath(jid)
		fls := dirs.ExtFilenames(jpath, ".tsv")
		ifls := []string{}
		cd {jpath}
		for _, ff := range fls {
			if ff != "all_epc.tsv" && ff != "all_run.tsv" {
				continue
			}
			dt := table.NewTable()
			fpath := filepath.Join(jpath, ff)
			err := dt.OpenCSV(core.Filename(fpath), table.Tab)
			if err != nil {
				fmt.Println(err.Error())
			}
			if strings.Contains(ff, "_epc.tsv") {
				idx := strings.Index(ff, "_epc.tsv")
				tablecat -colavg -col Epoch -o {ff[:idx+1]+"avg"+ff[idx+1:]} {ff}
			} else if strings.Contains(ff, "_run.tsv") {
				idx := strings.Index(ff, "_run.tsv")
				tablecat -colavg -o {ff[:idx+1]+"avg"+ff[idx+1:]} {ff}
			}
		}
	}
	cd {br.DataRoot}
}

func AvgData() {
	@0
	tv := JobsTableView
	jobs := tv.SelectedColumnStrings("JobID")
	if len(jobs) == 0 {
		fmt.Println("No Jobs rows selected")
		return
	}
	AvgDataFiles(jobs)
}

AvgData()

