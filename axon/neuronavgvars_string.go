// Code generated by "stringer -type=NeuronAvgVars"; DO NOT EDIT.

package axon

import (
	"errors"
	"strconv"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ActAvg-0]
	_ = x[AvgPct-1]
	_ = x[TrgAvg-2]
	_ = x[DTrgAvg-3]
	_ = x[AvgDif-4]
	_ = x[GeBase-5]
	_ = x[GiBase-6]
	_ = x[NeuronAvgVarsN-7]
}

const _NeuronAvgVars_name = "ActAvgAvgPctTrgAvgDTrgAvgAvgDifGeBaseGiBaseNeuronAvgVarsN"

var _NeuronAvgVars_index = [...]uint8{0, 6, 12, 18, 25, 31, 37, 43, 57}

func (i NeuronAvgVars) String() string {
	if i < 0 || i >= NeuronAvgVars(len(_NeuronAvgVars_index)-1) {
		return "NeuronAvgVars(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NeuronAvgVars_name[_NeuronAvgVars_index[i]:_NeuronAvgVars_index[i+1]]
}

func (i *NeuronAvgVars) FromString(s string) error {
	for j := 0; j < len(_NeuronAvgVars_index)-1; j++ {
		if s == _NeuronAvgVars_name[_NeuronAvgVars_index[j]:_NeuronAvgVars_index[j+1]] {
			*i = NeuronAvgVars(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: NeuronAvgVars")
}

var _NeuronAvgVars_descMap = map[NeuronAvgVars]string{
	0: `ActAvg is average activation (of minus phase activation state) over long time intervals (time constant = Dt.LongAvgTau) -- useful for finding hog units and seeing overall distribution of activation`,
	1: `AvgPct is ActAvg as a proportion of overall layer activation -- this is used for synaptic scaling to match TrgAvg activation -- updated at SlowInterval intervals`,
	2: `TrgAvg is neuron&#39;s target average activation as a proportion of overall layer activation, assigned during weight initialization, driving synaptic scaling relative to AvgPct`,
	3: `DTrgAvg is change in neuron&#39;s target average activation as a result of unit-wise error gradient -- acts like a bias weight. MPI needs to share these across processors.`,
	4: `AvgDif is AvgPct - TrgAvg -- i.e., the error in overall activity level relative to set point for this neuron, which drives synaptic scaling -- updated at SlowInterval intervals`,
	5: `GeBase is baseline level of Ge, added to GeRaw, for intrinsic excitability`,
	6: `GiBase is baseline level of Gi, added to GiRaw, for intrinsic excitability`,
	7: ``,
}

func (i NeuronAvgVars) Desc() string {
	if str, ok := _NeuronAvgVars_descMap[i]; ok {
		return str
	}
	return "NeuronAvgVars(" + strconv.FormatInt(int64(i), 10) + ")"
}
