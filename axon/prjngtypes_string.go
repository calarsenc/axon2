// Code generated by "stringer -type=PrjnGTypes"; DO NOT EDIT.

package axon

import (
	"errors"
	"strconv"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ExcitatoryG-0]
	_ = x[InhibitoryG-1]
	_ = x[ModulatoryG-2]
	_ = x[MaintG-3]
	_ = x[ContextG-4]
	_ = x[PrjnGTypesN-5]
}

const _PrjnGTypes_name = "ExcitatoryGInhibitoryGModulatoryGMaintGContextGPrjnGTypesN"

var _PrjnGTypes_index = [...]uint8{0, 11, 22, 33, 39, 47, 58}

func (i PrjnGTypes) String() string {
	if i < 0 || i >= PrjnGTypes(len(_PrjnGTypes_index)-1) {
		return "PrjnGTypes(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PrjnGTypes_name[_PrjnGTypes_index[i]:_PrjnGTypes_index[i+1]]
}

func (i *PrjnGTypes) FromString(s string) error {
	for j := 0; j < len(_PrjnGTypes_index)-1; j++ {
		if s == _PrjnGTypes_name[_PrjnGTypes_index[j]:_PrjnGTypes_index[j+1]] {
			*i = PrjnGTypes(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: PrjnGTypes")
}

var _PrjnGTypes_descMap = map[PrjnGTypes]string{
	0: `Excitatory projections drive Ge conductance on receiving neurons, which send to GiRaw and GiSyn neuron variables.`,
	1: `Inhibitory projections drive Gi inhibitory conductance, which send to GiRaw and GiSyn neuron variables.`,
	2: `Modulatory projections have a multiplicative effect on other inputs, which send to GModRaw and GModSyn neuron variables.`,
	3: `Maintenance projections drive unique set of NMDA channels that support strong active maintenance abilities. Send to GMaintRaw and GMaintSyn neuron variables.`,
	4: `Context projections are for inputs to CT layers, which update only at the end of the plus phase, and send to CtxtGe.`,
	5: ``,
}

func (i PrjnGTypes) Desc() string {
	if str, ok := _PrjnGTypes_descMap[i]; ok {
		return str
	}
	return "PrjnGTypes(" + strconv.FormatInt(int64(i), 10) + ")"
}
