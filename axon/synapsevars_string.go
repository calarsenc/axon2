// Code generated by "stringer -type=SynapseVars"; DO NOT EDIT.

package axon

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Wt-0]
	_ = x[LWt-1]
	_ = x[SWt-2]
	_ = x[DWt-3]
	_ = x[DSWt-4]
	_ = x[SynapseVarsN-5]
}

const _SynapseVars_name = "WtLWtSWtDWtDSWtSynapseVarsN"

var _SynapseVars_index = [...]uint8{0, 2, 5, 8, 11, 15, 27}

func (i SynapseVars) String() string {
	if i < 0 || i >= SynapseVars(len(_SynapseVars_index)-1) {
		return "SynapseVars(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SynapseVars_name[_SynapseVars_index[i]:_SynapseVars_index[i+1]]
}

func (i *SynapseVars) FromString(s string) error {
	for j := 0; j < len(_SynapseVars_index)-1; j++ {
		if s == _SynapseVars_name[_SynapseVars_index[j]:_SynapseVars_index[j+1]] {
			*i = SynapseVars(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: SynapseVars")
}
