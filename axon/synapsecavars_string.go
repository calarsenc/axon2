// Code generated by "stringer -type=SynapseCaVars"; DO NOT EDIT.

package axon

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CaM-0]
	_ = x[CaP-1]
	_ = x[CaD-2]
	_ = x[CaUpT-3]
	_ = x[Tr-4]
	_ = x[DTr-5]
	_ = x[DiDWt-6]
	_ = x[SynapseCaVarsN-7]
}

const _SynapseCaVars_name = "CaMCaPCaDCaUpTTrDTrDiDWtSynapseCaVarsN"

var _SynapseCaVars_index = [...]uint8{0, 3, 6, 9, 14, 16, 19, 24, 38}

func (i SynapseCaVars) String() string {
	if i < 0 || i >= SynapseCaVars(len(_SynapseCaVars_index)-1) {
		return "SynapseCaVars(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SynapseCaVars_name[_SynapseCaVars_index[i]:_SynapseCaVars_index[i+1]]
}

func (i *SynapseCaVars) FromString(s string) error {
	for j := 0; j < len(_SynapseCaVars_index)-1; j++ {
		if s == _SynapseCaVars_name[_SynapseCaVars_index[j]:_SynapseCaVars_index[j+1]] {
			*i = SynapseCaVars(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: SynapseCaVars")
}
