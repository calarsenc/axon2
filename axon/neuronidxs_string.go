// Code generated by "stringer -type=NeuronIdxs"; DO NOT EDIT.

package axon

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NrnIdxFlags-0]
	_ = x[NrnIdxNeurIdx-1]
	_ = x[NrnIdxLayIdx-2]
	_ = x[NrnIdxSubPool-3]
	_ = x[NeuronIdxsN-4]
}

const _NeuronIdxs_name = "NrnIdxFlagsNrnIdxNeurIdxNrnIdxLayIdxNrnIdxSubPoolNeuronIdxsN"

var _NeuronIdxs_index = [...]uint8{0, 11, 24, 36, 49, 60}

func (i NeuronIdxs) String() string {
	if i < 0 || i >= NeuronIdxs(len(_NeuronIdxs_index)-1) {
		return "NeuronIdxs(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NeuronIdxs_name[_NeuronIdxs_index[i]:_NeuronIdxs_index[i+1]]
}

func (i *NeuronIdxs) FromString(s string) error {
	for j := 0; j < len(_NeuronIdxs_index)-1; j++ {
		if s == _NeuronIdxs_name[_NeuronIdxs_index[j]:_NeuronIdxs_index[j+1]] {
			*i = NeuronIdxs(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: NeuronIdxs")
}
