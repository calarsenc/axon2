// Code generated by "stringer -type=ClampTypes"; DO NOT EDIT.

package axon

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RateClamp-0]
	_ = x[GeClamp-1]
	_ = x[AddGeClamp-2]
	_ = x[ClampTypesN-3]
}

const _ClampTypes_name = "RateClampGeClampAddGeClampClampTypesN"

var _ClampTypes_index = [...]uint8{0, 9, 16, 26, 37}

func (i ClampTypes) String() string {
	if i < 0 || i >= ClampTypes(len(_ClampTypes_index)-1) {
		return "ClampTypes(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ClampTypes_name[_ClampTypes_index[i]:_ClampTypes_index[i+1]]
}

func (i *ClampTypes) FromString(s string) error {
	for j := 0; j < len(_ClampTypes_index)-1; j++ {
		if s == _ClampTypes_name[_ClampTypes_index[j]:_ClampTypes_index[j+1]] {
			*i = ClampTypes(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: ClampTypes")
}
