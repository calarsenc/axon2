// Code generated by "goki generate -add-types"; DO NOT EDIT.

package main

import (
	"goki.dev/gti"
	"goki.dev/ordmap"
)

var _ = gti.AddType(&gti.Type{
	Name:       "main.Sim",
	ShortName:  "main.Sim",
	IDName:     "sim",
	Doc:        "Sim holds the params, table, etc",
	Directives: gti.Directives{},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"GABAstd", &gti.Field{Name: "GABAstd", Type: "github.com/emer/axon/v2/chans.GABABParams", LocalType: "chans.GABABParams", Doc: "standard chans version of GABAB", Directives: gti.Directives{}, Tag: ""}},
		{"GABAbv", &gti.Field{Name: "GABAbv", Type: "float64", LocalType: "float64", Doc: "multiplier on GABAb as function of voltage", Directives: gti.Directives{}, Tag: "def:\"0.1\""}},
		{"GABAbo", &gti.Field{Name: "GABAbo", Type: "float64", LocalType: "float64", Doc: "offset of GABAb function", Directives: gti.Directives{}, Tag: "def:\"10\""}},
		{"GABAberev", &gti.Field{Name: "GABAberev", Type: "float64", LocalType: "float64", Doc: "GABAb reversal / driving potential", Directives: gti.Directives{}, Tag: "def:\"-90\""}},
		{"Vstart", &gti.Field{Name: "Vstart", Type: "float64", LocalType: "float64", Doc: "starting voltage", Directives: gti.Directives{}, Tag: "def:\"-90\""}},
		{"Vend", &gti.Field{Name: "Vend", Type: "float64", LocalType: "float64", Doc: "ending voltage", Directives: gti.Directives{}, Tag: "def:\"0\""}},
		{"Vstep", &gti.Field{Name: "Vstep", Type: "float64", LocalType: "float64", Doc: "voltage increment", Directives: gti.Directives{}, Tag: "def:\"1\""}},
		{"Smax", &gti.Field{Name: "Smax", Type: "int", LocalType: "int", Doc: "max number of spikes", Directives: gti.Directives{}, Tag: "def:\"15\""}},
		{"RiseTau", &gti.Field{Name: "RiseTau", Type: "float64", LocalType: "float64", Doc: "rise time constant", Directives: gti.Directives{}, Tag: ""}},
		{"DecayTau", &gti.Field{Name: "DecayTau", Type: "float64", LocalType: "float64", Doc: "decay time constant -- must NOT be same as RiseTau", Directives: gti.Directives{}, Tag: ""}},
		{"GsXInit", &gti.Field{Name: "GsXInit", Type: "float64", LocalType: "float64", Doc: "initial value of GsX driving variable at point of synaptic input onset -- decays expoentially from this start", Directives: gti.Directives{}, Tag: ""}},
		{"MaxTime", &gti.Field{Name: "MaxTime", Type: "float64", LocalType: "float64", Doc: "time when peak conductance occurs, in TimeInc units", Directives: gti.Directives{}, Tag: "inactive:\"+\""}},
		{"TauFact", &gti.Field{Name: "TauFact", Type: "float64", LocalType: "float64", Doc: "time constant factor used in integration: (Decay / Rise) ^ (Rise / (Decay - Rise))", Directives: gti.Directives{}, Tag: "inactive:\"+\""}},
		{"TimeSteps", &gti.Field{Name: "TimeSteps", Type: "int", LocalType: "int", Doc: "total number of time steps to take", Directives: gti.Directives{}, Tag: ""}},
		{"TimeInc", &gti.Field{Name: "TimeInc", Type: "float64", LocalType: "float64", Doc: "time increment per step", Directives: gti.Directives{}, Tag: ""}},
		{"VGTable", &gti.Field{Name: "VGTable", Type: "*github.com/emer/etable/v2/etable.Table", LocalType: "*etable.Table", Doc: "table for plot", Directives: gti.Directives{}, Tag: "view:\"no-inline\""}},
		{"SGTable", &gti.Field{Name: "SGTable", Type: "*github.com/emer/etable/v2/etable.Table", LocalType: "*etable.Table", Doc: "table for plot", Directives: gti.Directives{}, Tag: "view:\"no-inline\""}},
		{"TimeTable", &gti.Field{Name: "TimeTable", Type: "*github.com/emer/etable/v2/etable.Table", LocalType: "*etable.Table", Doc: "table for plot", Directives: gti.Directives{}, Tag: "view:\"no-inline\""}},
		{"VGPlot", &gti.Field{Name: "VGPlot", Type: "*github.com/emer/etable/v2/eplot.Plot2D", LocalType: "*eplot.Plot2D", Doc: "the plot", Directives: gti.Directives{}, Tag: "view:\"-\""}},
		{"SGPlot", &gti.Field{Name: "SGPlot", Type: "*github.com/emer/etable/v2/eplot.Plot2D", LocalType: "*eplot.Plot2D", Doc: "the plot", Directives: gti.Directives{}, Tag: "view:\"-\""}},
		{"TimePlot", &gti.Field{Name: "TimePlot", Type: "*github.com/emer/etable/v2/eplot.Plot2D", LocalType: "*eplot.Plot2D", Doc: "the plot", Directives: gti.Directives{}, Tag: "view:\"-\""}},
	}),
	Embeds: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{
		{"VGRun", &gti.Method{Name: "VGRun", Doc: "VGRun runs the V-G equation.", Directives: gti.Directives{
			&gti.Directive{Tool: "gti", Directive: "add", Args: []string{}},
		}, Args: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}), Returns: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{})}},
		{"SGRun", &gti.Method{Name: "SGRun", Doc: "SGRun runs the spike-g equation.", Directives: gti.Directives{
			&gti.Directive{Tool: "gti", Directive: "add", Args: []string{}},
		}, Args: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}), Returns: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{})}},
		{"TimeRun", &gti.Method{Name: "TimeRun", Doc: "TimeRun runs the equation.", Directives: gti.Directives{
			&gti.Directive{Tool: "gti", Directive: "add", Args: []string{}},
		}, Args: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}), Returns: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{})}},
	}),
})
