// Code generated by "core generate -add-types"; DO NOT EDIT.

package cond

import (
	"cogentcore.org/core/gti"
)

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/axon/v2/examples/pvlv/cond.Condition", IDName: "condition", Doc: "Condition defines parameters for running a specific type of conditioning expt", Fields: []gti.Field{{Name: "Name", Doc: "identifier for this type of configuration"}, {Name: "Desc", Doc: "description of this configuration"}, {Name: "Block", Doc: "mix of trial types per block to run -- must be listed in AllBlocks"}, {Name: "FixedProb", Doc: "use a permuted list to ensure an exact number of trials have US -- else random draw each time"}, {Name: "NBlocks", Doc: "number of full blocks of different trial types to run (like Epochs)"}, {Name: "NTrials", Doc: "number of behavioral trials per block -- blocks, with the different types of Trials specified in Block allocated across these Trials.  More different trial types and greater stochasticity (lower probability) of US presentation requires more trials."}, {Name: "Permute", Doc: "permute list of generated trials in random order after generation -- otherwise presented in order specified in the Block type"}}})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/axon/v2/examples/pvlv/cond.CondEnv", IDName: "cond-env", Doc: "CondEnv provides a flexible implementation of standard Pavlovian\nconditioning experiments involving CS -> US sequences (trials).\nHas a large database of standard conditioning paradigms\nparameterized in a controlled manner.\n\nTime hierarchy:\n* Run = sequence of 1 or more Conditions\n* Condition = specific mix of trial types, generated at start of Condition\n* Block = one full pass through all trial types generated for condition (like Epoch)\n* Trial = one behavioral trial consisting of CS -> US presentation over time steps (Ticks)\n* Tick = discrete time steps within behavioral Trial, typically one Network update (Alpha / Theta cycle)", Fields: []gti.Field{{Name: "Nm", Doc: "name of this environment"}, {Name: "Dsc", Doc: "description of this environment"}, {Name: "NYReps", Doc: "number of Y repetitions for localist reps"}, {Name: "RunName", Doc: "current run name"}, {Name: "RunDesc", Doc: "description of current run"}, {Name: "CondName", Doc: "name of current condition"}, {Name: "CondDesc", Doc: "description of current condition"}, {Name: "Run", Doc: "counter over runs"}, {Name: "Condition", Doc: "counter over Condition within a run -- Max depends on number of conditions specified in given Run"}, {Name: "Block", Doc: "counter over full blocks of all trial types within a Condition -- like an Epoch"}, {Name: "Trial", Doc: "counter of behavioral trials within a Block"}, {Name: "Tick", Doc: "counter of discrete steps within a behavioral trial -- typically maps onto Alpha / Theta cycle in network"}, {Name: "TrialName", Doc: "name of current trial step"}, {Name: "TrialType", Doc: "type of current trial step"}, {Name: "USTimeInStr", Doc: "decoded value of USTimeIn"}, {Name: "Trials", Doc: "current generated set of trials per Block"}, {Name: "CurRun", Doc: "copy of current run parameters"}, {Name: "CurTrial", Doc: "copy of info for current trial"}, {Name: "CurStates", Doc: "current rendered state tensors -- extensible map"}}})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/axon/v2/examples/pvlv/cond.Run", IDName: "run", Doc: "Run is a sequence of Conditions to run in order", Fields: []gti.Field{{Name: "Name", Doc: "Name of the run"}, {Name: "Desc", Doc: "Description"}, {Name: "Weights", Doc: "name of condition for weights file to load prior to starting -- allows faster testing but weights may be out of date"}, {Name: "Cond1", Doc: "name of condition 1"}, {Name: "Cond2", Doc: "name of condition 2"}, {Name: "Cond3", Doc: "name of condition 3"}, {Name: "Cond4", Doc: "name of condition 4"}, {Name: "Cond5", Doc: "name of condition 5"}}})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/axon/v2/examples/pvlv/cond.Valence", IDName: "valence", Doc: "Valence"})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/axon/v2/examples/pvlv/cond.Trial", IDName: "trial", Doc: "Trial represents one behavioral trial, unfolding over\nNTicks individual time steps, with one or more CS's (conditioned stimuli)\nand a US (unconditioned stimulus -- outcome).", Fields: []gti.Field{{Name: "Name", Doc: "conventional suffixes: _R = reward, _NR = non-reward; _test = test trial (no learning)"}, {Name: "Test", Doc: "true if testing only -- no learning"}, {Name: "Pct", Doc: "Percent of all trials for this type"}, {Name: "Valence", Doc: "Positive or negative reward valence"}, {Name: "USProb", Doc: "Probability of US"}, {Name: "MixedUS", Doc: "Mixed US set?"}, {Name: "USMag", Doc: "US magnitude"}, {Name: "NTicks", Doc: "Number of ticks for a trial"}, {Name: "CS", Doc: "Conditioned stimulus"}, {Name: "CSStart", Doc: "Tick of CS start"}, {Name: "CSEnd", Doc: "Tick of CS end"}, {Name: "CS2Start", Doc: "Tick of CS2 start: -1 for none"}, {Name: "CS2End", Doc: "Tick of CS2 end: -1 for none"}, {Name: "US", Doc: "Unconditioned stimulus"}, {Name: "USStart", Doc: "Tick for start of US presentation"}, {Name: "USEnd", Doc: "Tick for end of US presentation"}, {Name: "Context", Doc: "Context -- typically same as CS -- if blank CS will be copied -- different in certain extinguishing contexts"}, {Name: "USOn", Doc: "for rendered trials, true if US active"}, {Name: "CSOn", Doc: "for rendered trials, true if CS active"}}})

var _ = gti.AddType(&gti.Type{Name: "github.com/emer/axon/v2/examples/pvlv/cond.Block", IDName: "block", Doc: "Block represents a set of trial types"})
